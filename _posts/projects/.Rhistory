title <- "2014-12-06-Test-Article"
knitPost(title)
source("src/knitSrc.R")
knitPost(title)
rm(list = ls())
title <- "2014-12-06-Testing-Charts"
source("src/knitSrc.R")
knitPost(title)
?mv
?basename
getwd()
title
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(title)), "/")
fig.path
moveFigs <- function(fig.path, ...) {
files <- dir(fig.path, full.name = TRUE)
files
}
movefigs(fig.path)
moveFigs(fig.path)
getwd()
?setwd
setwd("/home/jaehyeon/jaehyeon-kim.github.io/_posts/projects")
fig.path
moveFigs <- function(fig.path, ...) {
setwd("/home/jaehyeon/jaehyeon-kim.github.io/_posts/projects")
if(file.exists(paste0("../../",fig.path))) {
unlink(paste0("../../",fig.path), recursive = TRUE)
dir.create(paste0("../../",fig.path))
} else {
dir.create(paste0("../../",fig.path))
}
#files <- dir(fig.path, full.name = TRUE)
#files
}
fig.path
moveFigs(fig.path)
file.exists(paste0("../../",fig.path))
dir.create(paste0("../../",fig.path))
fig.path
dir.create("../../figs")
moveFigs <- function(fig.path, ...) {
setwd("/home/jaehyeon/jaehyeon-kim.github.io/_posts/projects")
if(!file.exists("../../figs")) { dir.create("../../figs")}
if(file.exists(paste0("../../",fig.path))) {
unlink(paste0("../../",fig.path), recursive = TRUE)
dir.create(paste0("../../",fig.path))
} else {
dir.create(paste0("../../",fig.path))
}
#files <- dir(fig.path, full.name = TRUE)
#files
}
moveFigs(fig.path)
moveFigs(fig.path)
?sapply
?file.copy
files <- dir(fig.path, full.name = TRUE)
files
sapply(files, file.copy, from=fig.path, to=paste0("../../",fig.path), recursive=TRUE)
?sapply
?mapply
?file.copy
files
fromFiles <- dir(fig.path, full.name = TRUE)
toFiles <- paste0("../../",fromFiles)
fromFiles
toFiles
from <- dir(fig.path, full.name = TRUE)
to <- paste0("../../",fromFiles)
mapply(file.copy, from=from, to=to, recursive=TRUE)
warnings()
if(!file.exists("../../figs")) { dir.create("../../figs")}
mapply(file.copy, from=from, to=to, recursive=TRUE)
warnings()
if(file.exists(paste0("../../",fig.path))) {
unlink(paste0("../../",fig.path), recursive = TRUE)
dir.create(paste0("../../",fig.path))
} else {
dir.create(paste0("../../",fig.path))
}
mapply(file.copy, from=from, to=to, recursive=TRUE)
mapply(file.copy, from=from, to=to)
dir("aa",full.name=TRUE)
dir("aa",full.name=TRUE) == NULL
dir("aa",full.name=TRUE) == character(0)
dir("aa",full.name=TRUE)[1]
from[1]
from[1]==NA
from
moveFigs <- function(fig.path, ...) {
# set working directory to be the project directory
setwd("/home/jaehyeon/jaehyeon-kim.github.io/_posts/projects")
# create fig folder where a folder of each article will be moved
if(!file.exists("../../figs")) { dir.create("../../figs")}
# create figure folder for an article
if(file.exists(paste0("../../",fig.path))) {
unlink(paste0("../../",fig.path), recursive = TRUE)
dir.create(paste0("../../",fig.path))
} else {
dir.create(paste0("../../",fig.path))
}
# copy figures
from <- dir(fig.path, full.name = TRUE)
to <- paste0("../../",fromFiles)
mapply(file.copy, from=from, to=to)
}
fig.path
moveFigs(fig.path)
moveFigs(fig.path)
rm(list = ls())
source("src/knitSrc.R")
source("src/knitSrc.R")
title <- "2014-12-06-Testing-Charts"
knitPost(title)
source("src/knitSrc.R")
knitPost(title)
to
from
rm(list = ls())
title <- "2014-12-06-Testing-Charts"
source("src/knitSrc.R")
source("src/knitSrc.R")
knitPost(title)
source("src/knitSrc.R")
knitPost(title)
source("src/knitSrc.R")
source("src/knitSrc.R")
knitPost(title)
title <- "2014-12-06-Testing-Charts"
source("src/knitSrc.R")
knitPost(title)
source("src/knitSrc.R")
knitPost(title)
source("src/knitSrc.R")
knitPost(title)
source("src/knitSrc.R")
title <- "2014-12-06-Testing-Charts"
knitPost(title)
source("src/knitSrc.R")
knitPost("2014-11-19-R-Rroject-Setup")
fig.path = "aaa"
length(fig.path)
nchar(fig.path)
title
title <- "2014-11-19-R-Rroject-Setup"
paste0("./figs/", sub(".Rmd$", "", basename(title)), "/")
dir(fig.path)
if(dir(fig.path))
{true}
dir(fig.path)[1]
file.exists(fig.path)
rm(list = ls())
title <- "2014-11-19-R-Rroject-Setup"
source("src/knitSrc.R")
knitPost(title)
title <- "2014-12-06-Testing-Charts"
knitPost(title)
title <- "2014-11-19-R-Rroject-Setup"
knitPost(title)
?mapply
rep(10,2)
mapply(rnorm, rep(2,10))
sim <- function(n, trial) {
set.seed(123457)
mapply(rnorm, rep(n, trial))
}
sim(2, 10)
sim(2, 10)
mat <- mapply(rnorm, rep(n, m))
mat <- mapply(rnorm, rep(2, 10))
mat
apply(mat, 2, sum)
fun <- function(x) { sum((x-mean(x))^2) }
apply(mat, 2, fun)
length(c(1,2))
c(1,2)[length(c(1,2))]
rm(list = ls())
sim <- function(n, m) {
# create internal functions
sigmaSquared <- function(x) {
sum((x-mean(x))^2) / sum(x[1:length(x)-1]^2)
}
mu <- function(x) {
mean(x) + x[length(x)] + sqrt(sigmaSquared / length(x))
}
# create random numbers
set.seed(123457)
mat <- mapply(rnorm, rep(n, m))
apply(mat, 2, mu)
}
sim(2, 10)
sigmaSquared <- function(x) {
sum((x-mean(x))^2) / sum(x[1:length(x)-1]^2)
}
sigmaSquared(c(1,2,3))
mu <- function(x) {
mean(x) + x[length(x)] + sqrt(sigmaSquared(x) / length(x))
}
mu(c(1,2,3))
sim <- function(n, m) {
# create internal functions
sigmaSquared <- function(x) {
sum((x-mean(x))^2) / sum(x[1:length(x)-1]^2)
}
mu <- function(x) {
mean(x) + x[length(x)] + sqrt(sigmaSquared(x) / length(x))
}
# create random numbers
set.seed(123457)
mat <- mapply(rnorm, rep(n, m))
apply(mat, 2, mu)
}
sim(2,10)
simu <- sim(100,1000)
simu
library(plyr)
set.seed(123457)
daySeq <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
bpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = bpm)
library(plyr)
set.seed(123457)
daySeq <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
bpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = bpm)
set.seed(123457)
days <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
bpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = bpm)
df
set.seed(123457)
days <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
randBpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = randBpm)
df
lst <- dlply(df, .(Date, BPM))
dimDf <- sapply(lst, dim)
isGrTwo <- dimDf[1,] >= 2
ldply(lst[isGrTwo])
str(df)
?subset
exDf <- ldply(lst[isGrTwo])
exDf
subset(exDf, subset = Date %in% dateFilter)
dateFilter <- c(as.Date("2014/12/1"), as.Date("2014/12/3"))
numFilter <- c(1)
subset(exDf, subset = Date %in% dateFilter)
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter)
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
rm(list = ls())
library(plyr)
# create initial conditions
numRec <- 2
dateFilter <- c(as.Date("2014/12/1"), as.Date("2014/12/3"))
numFilter <- c(1)
# create a data frame
set.seed(123457)
days <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
randBpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = randBpm)
# data frame to list by Date and BPM
lst <- dlply(df, .(Date, BPM))
# find which list elements >= numRec
dimDf <- sapply(lst, dim)
isGreater <- dimDf[1,] >= numRec
# convert into data frame only if # elements >= numRec
exDf <- ldply(isGreater])
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
exDf <- ldply(isGreater)
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
exDf
rm(list = ls())
library(plyr)
# create initial conditions
numRec <- 2
dateFilter <- c(as.Date("2014/12/1"), as.Date("2014/12/3"))
numFilter <- c(1)
# create a data frame
set.seed(123457)
days <- seq(as.Date("2014/12/1"), as.Date("2014/12/3"), "day")
randDays <- sample(days, size=10, replace=TRUE)
randBpm <- sample(1:3, size=10, replace=TRUE)
df <- data.frame(Date=randDays, BPM = randBpm)
# data frame to list by Date and BPM
lst <- dlply(df, .(Date, BPM))
# find which list elements >= numRec
dimDf <- sapply(lst, dim)
isGreater <- dimDf[1,] >= numRec
# convert into data frame only if # elements >= numRec
exDf <- ldply(isGreater)
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
exDf <- ldply(isGreater)
exDf
# convert into data frame only if # elements >= numRec
exDf <- ldply([isGreater])
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
exDf <- ldply(lst[isGreater])
subset(exDf, subset = Date %in% dateFilter & BPM %in% numFilter, select = c(-.id))
rm(list = ls())
source("src/knitSrc.R")
knitPost("2014-12-17-Looping-without-for")
source("src/knitSrc.R")
knitPost("2014-12-17-Looping-without-for")
source("src/knitSrc.R")
knitPost("2014-12-17-Looping-without-for")
source("src/knitSrc.R")
knitPost("2014-12-22-Learning-Scala-Ch1")
knitPost("2014-12-26-Learning-Scala-Ch2")
knitPost("2014-12-30-Learning-Scala-Ch3")
source("src/knitSrc.R")
knitPost("2014-12-26-Learning-Scala-Ch2")
source("src/knitSrc.R")
knitPost("2014-12-26-Learning-Scala-Ch2")
source("src/knitSrc.R")
knitPost("2015-01-03-Learning-Scala-Ch4")
getwd()
knitPost("2015-01-03-Learning-Scala-Ch4")
?mv
?moveFile
?move
folder <- "data_2015-01-08-India-Education"
?file.rename
?paste
file.rename("india.csv",paste(folder,"india.csv",sep="/"))
folder <- "data_2015-01-08-India-Education"
head(read.csv(paste(folder,"india.csv",sep="/")))
data <- read.csv(paste(folder,"india.csv",sep="/"))
?rename
?names
folder <- "data_2015-01-08-India-Education"
data <- read.csv(paste(folder,"india.csv",sep="/"))
data <- data[,c(5:13)]
names(data) <- c("state","area","totalPop","malePop","femalePop","totalEdu","maleEdu","femaleEdu")
str(data)
folder <- "data_2015-01-08-India-Education"
data <- read.csv(paste(folder,"india.csv",sep="/"))
data <- data[,c(5:13)]
names(data) <- c("state","area","age","totalPop","malePop","femalePop","totalEdu","maleEdu","femaleEdu")
str(data)
summary(data)
folder <- "data_2015-01-08-India-Education"
data <- read.csv(paste(folder,"india.csv",sep="/"))
c(2,c(5:13)
)
folder <- "data_2015-01-08-India-Education"
data <- read.csv(paste(folder,"india.csv",sep="/"))
data <- data[,c(2,c(5:13))]
names(data) <- c("code","state","area","age","totalPop","malePop","femalePop","totalEdu","maleEdu","femaleEdu")
summary(data)
folder <- "data_2015-01-08-India-Education"
data <- read.csv(paste(folder,"india.csv",sep="/"))
data <- data[,c(2,c(5:13))]
names(data) <- c("code","state","area","age","totalPop","malePop","femalePop","totalEdu","maleEdu","femaleEdu")
data$code <- as.factor(data$code)
summary(data)
head(data)
require(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
x <- data.frame(USPersonalExpenditure)
colnames(x) <- substr(colnames(x), 2, 5)
head(x)
a <- rCharts:::Highchart$new()
a <- rCharts:::Highcharts$new()
a$chart(type = "column")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
a$printChart()
a <- rCharts:::Highcharts$new()
a$chart(type = "column")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
# Print chart
a$printChart()
a$print('chart 1', include_assets = TRUE)
rm(list = ls())
x <- data.frame(USPersonalExpenditure)
colnames(x) <- substr(colnames(x), 2, 5)
# Create chart
a <- rCharts:::Highcharts$new()
a$chart(type = "column")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
# Print chart
a$print('chart 1', include_assets = TRUE)
x
source("src/knitSrc.R")
knitPost("YYYY-MM-DD-Article-Title")
knitPost("2015-01-08-India-Education")
?knit
knit("_2015-01-08-India-Education.Rmd","2015-01-08-India-Education.html")
knitPost("2015-01-08-India-Education")
rm(list = ls())
rm(list = ls())
