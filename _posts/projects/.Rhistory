dir.create("src")
base.url = "/"
base.url
base.url = "../"
base.url
dir(".")
dir("./")
dir("../")
dir("../../")
dir("../../../")
dir("/../../")
dir("../")
getwd()
dir()
dir("./")
dir("../")
dir("../../")
paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
paste0("figs/", sub(".Rmd$", "", basename("aaa")), "/")
getwd()
source("src/knitSrc.R")
source("src/knitSrc.R")
paste0("../","2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
dataDir <- paste0("data","_","2014-11-20-Download-Stock-Data-1")
if(file.exists(dataDir)) {
unlink(dataDir, recursive = TRUE)
dir.create(dataDir)
} else {
dir.create(dataDir)
}
codes <- c("MSFT", "TCHC") # codes <- c("MSFT", "1234") for testing
urls <- paste0("http://www.google.com/finance/historical?q=NASDAQ:",
codes,"&output=csv")
# forward hash (/) may need to be changed into backward hash (\\)
paths <- paste0(dataDir,"/",codes,".csv")
# simple error handling in case file doesn't exists
downloadFile <- function(url, path, ...) {
# remove file if exists already
if(file.exists(path)) file.remove(path)
# download file
tryCatch(
download.file(url, path, ...), error = function(c) {
# remove file if error
if(file.exists(path)) file.remove(path)
# create error message
c$message <- paste(substr(path, 1, 4),"failed")
message(c$message)
}
)
}
# wrapper of mapply
Map(downloadFile, urls, paths)
files <- dir(dataDir, full.name = TRUE)
dataList <- llply(files, function(file){
data <- read.csv(file, stringsAsFactors = FALSE)
# get code from file path
pattern <- "/[A-Z][A-Z][A-Z][A-Z]"
code <- substr(str_extract(file, pattern), 2, nchar(str_extract(file, pattern)))
# first column's name is funny
names(data) <- c("Date","Open","High","Low","Close","Volume")
data$Date <- dmy(data$Date)
data$Open <- as.numeric(data$Open)
data$High <- as.numeric(data$High)
data$Low <- as.numeric(data$Low)
data$Close <- as.numeric(data$Close)
data$Volume <- as.integer(data$Volume)
data$Code <- code
data
}, .progress = "text")
data <- rbind_all(dataList)
install.packages("lubridate")
install.packages("stringr")
install.packages("lubridate")
install.packages("dplyr")
install.packages("plyr")
install.packages("data.table")
rm(list = ls())
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
paste0("figs/", sub(".Rmd$", "", basename("2014-11-20-Download-Stock-Data-1.md")), "/")
input <- "014-11-20-Download-Stock-Data-1.md"
paste0("base.url","figs/", sub(".Rmd$", "", basename(input)), "/")
rm(list = ls())
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
?knit
rm(list = ls())
source("src/knitSrc.R")
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1.Rmd")
input <- "2014-11-20-Download-Stock-Data-1.Rmd"
base.url = "../../"
paste0(base.url,"figs/", sub(".Rmd$", "", basename(input)), "/")
input <- "2014-11-20-Download-Stock-Data-1"
paste0(base.url,"figs/", sub(".Rmd$", "", basename(input)), "/")
rm(list = ls())
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1")
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1")
knitPost("2014-11-20-Download-Stock-Data-1")
knitPost("2014-11-20-Download-Stock-Data-2")
rm(list = ls())
source("src/knitSrc.R")
source("src/knitSrc.R")
rm(list = ls())
source("src/knitSrc.R")
knitPost("2014-11-20-Download-Stock-Data-1")
knitPost("2014-11-20-Download-Stock-Data-2")
knitPost("2014-11-20-Download-Stock-Data-2")
knitPost("2014-11-20-Download-Stock-Data-2")
rm(list = ls())
getwd()
source("src/knitSrc.R")
kintPost("2014-11-18-Jekyll-Build-on-CentOS")
knitPost("2014-11-18-Jekyll-Build-on-CentOS")
knitPost("2014-11-19-R-Rroject-Setup")
readline("aaa")
readlines("aaa")
readLines("aaa")
