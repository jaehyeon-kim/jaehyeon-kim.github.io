postDt <- preDt[, myfun]
postDt
preDt
preDt[, list(name = name)]
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
postDt
postDt <- preDt %>% mutate(period = as.double(end - start))
postDt
head(postDt)
data <- matrix(c("08Q1","08Q2","08Q3","08Q4","09Q1","09Q2","09Q3","09Q4","10Q1","10Q2","10Q3","10Q4","11Q1","11Q2","11Q3","11Q4","12Q1","12Q2","12Q3","12Q4","13Q1","13Q2","13Q3","13Q4","14Q1","14Q2","14Q3","14Q4","15Q1", 155782698, 159463653.4, 172741125.6, 204547180, 126049319.8, 138648461.5, 135678842.1, 242568446.1, 177019289.3, 200397120.6, 182516217.1, 306143365.6, 222890269.2, 239062450.2, 229124263.2, 370575384.7, 257757410.5, 256125841.6, 231879306.6, 419580274, 268211059, 276378232.1, 261739468.7, 429127062.8, 254776725.6, 329429882.8, 264012891.6, 496745973.9, 284484362.55),ncol=2,byrow=FALSE)
data
plot(data)
>plot
?plot
plot(data[,1], data[,2])
plot(data[,1], as.numeric(data[,2]))
plot(as.numeric(data[,2]))
plot(as.factor(data[,1]), as.numeric(data[,2]))
data
data[,order(as.numeric(data[,2]))]
data[order(as.numeric(data[,2])),]
data <- matrix(c("08Q1","08Q2","08Q3","08Q4","09Q1","09Q2","09Q3","09Q4","10Q1","10Q2","10Q3","10Q4","11Q1","11Q2","11Q3","11Q4","12Q1","12Q2","12Q3","12Q4","13Q1","13Q2","13Q3","13Q4","14Q1","14Q2","14Q3","14Q4","15Q1", 155782698, 159463653.4, 172741125.6, 204547180, 126049319.8, 138648461.5, 135678842.1, 242568446.1, 177019289.3, 200397120.6, 182516217.1, 306143365.6, 222890269.2, 239062450.2, 229124263.2, 370575384.7, 257757410.5, 256125841.6, 231879306.6, 419580274, 268211059, 276378232.1, 261739468.7, 429127062.8, 254776725.6, 329429882.8, 264012891.6, 496745973.9, 284484362.55),ncol=2,byrow=FALSE)
outliers <- matrix(c("14Q4","14Q2","12Q1","13Q1","14Q2","11Q1","11Q4","14Q2","13Q4","14Q4","13Q1",20193525.68, 18319234.7, 12896323.62, 12718744.01, 12353002.09, 11936190.13, 11356476.28, 11351192.31, 10101527.85, 9723641.25, 9643214.018),ncol=2,byrow=FALSE)
outliers
?png
preDf
lapply(preDf, function(x) print(names(x)))
preDf
lapply(preDf, function(x) print(names(x)))
lapply(preDf, plot)
myPlot <- function(x) {
png(paste(names(x), ".png", sep=""))
plot(x)
}
lapply(preDf, myPlot)
myPlot <- function(ind, x) {
png(paste(ind, ".png", sep=""))
plot(x)
dev.off()
}
lapply(1:ncol(preDf), myPlot, x = preDf[, i])
lapply(1:ncol(preDf), function(x) {
png(paste(x, ".png", sep = ""))
plot(preDf[,x])
dev.off()
})
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
## add unconditional period
# base
postDf <- transform(preDf, period = as.double(end - start))
# plyr
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# dplyr
postDf <- preDf %>% mutate(period = as.double(end - start))
# data.table
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# dplyr + data.table
postDt <- preDt %>% mutate(period = as.double(end - start))
head(postDt)
preDf
?aggregate
postDf
aggregate(postDf[,5:6], by = "id", FUN = function(x) if(is.factor(x)) x else sum(x))
aggregate(postDf[,5:6], by = list("id"), FUN = function(x) if(is.factor(x)) x else sum(x))
aggregate(postDf[,5:6], by = list(id), FUN = function(x) if(is.factor(x)) x else sum(x))
aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else sum(x))
merge(postDf, agg, by = "id", all.x = T)
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else sum(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
postDf
ddply(preDf, .(id), mutate, mean = sum(as.double(end - start)))
ddply(preDf, .(id), mutate, mean_period = sum(as.double(end - start)))
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
## add unconditional period
# base
postDf <- transform(preDf, period = as.double(end - start))
# plyr
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# dplyr
postDf <- preDf %>% mutate(period = as.double(end - start))
# data.table
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# dplyr + data.table
postDt <- preDt %>% mutate(period = as.double(end - start))
head(postDt)
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
postDf
ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start)))
preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id]
preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
Sys.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
?Sys.time
system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
## add unconditional period
# base
postDf <- transform(preDf, period = as.double(end - start))
# plyr
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# dplyr
postDf <- preDf %>% mutate(period = as.double(end - start))
# data.table
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# dplyr + data.table
postDt <- preDt %>% mutate(period = as.double(end - start))
head(postDt)
## add conditional period (by id)
# base
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
# plyr
postDf <- ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start)))
# dplyr
postDf <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
# data.table
postDt <- preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id]
postDt <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
head(postDt)
## speed
system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
system.time({
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
postDf
preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
postDt <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
postDt
postDf
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
postDf
head(postDf, 100)
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))
names(agg) <- c("id", "ids", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
head(postDf, 100)
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
head(agg)
names(agg) <- c("id", "period")
head(agg)
head(preDf)
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf1 <- merge(postDf, agg, by = "id", all.x = T)
postDf1
head(postDf1, 100)
head(agg)
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
head(postDf)
rm(list = ls())
system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
### add unconditional and conditional mean period
## base
# unconditional
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
## plyr
# unconditional
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# conditonal
postDf <- ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start)))
## dplyr
# unconditional
postDf <- preDf %>% mutate(period = as.double(end - start))
# conditional
postDf <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
## data.table
# unconditional
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# conditional
postDt <- preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id]
## dplyr + data.table
# unconditional
postDt <- preDt %>% mutate(period = as.double(end - start))
# conditional
postDt <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
head(postDt)
## speed
system.time({
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
rm(list = ls())
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
#tim2 <- system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
## speed
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
#tim2 <- system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
# unconditional
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim1
times <- do.call("rbind", list(tim1, tim3, tim4, tim5))
times
do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
require(ggplot2)
times <- do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
require(ggplot2)
times <- do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
rm(list = )
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
### add unconditional and conditional mean period
## base
# unconditional
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
## plyr
# unconditional
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# conditonal
postDf <- ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start)))
## dplyr
# unconditional
postDf <- preDf %>% mutate(period = as.double(end - start))
# conditional
postDf <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
## data.table
# unconditional
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# conditional
postDt <- preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id]
## dplyr + data.table
# unconditional
postDt <- preDt %>% mutate(period = as.double(end - start))
# conditional
postDt <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
head(postDt)
## speed
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
tim2 <- system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
require(ggplot2)
times <- do.call("rbind", list(base = tim1, plyr = tim2, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "plyr", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
require(ggplot2)
ggplot(times[, -2], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
dev.off()
require(ggplot2)
ggplot(times[, -2], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times[,2]
times[,-2]
times
times[-2,]
require(ggplot2)
ggplot(times[-2, ], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times
times[, c(1:3,6)]
