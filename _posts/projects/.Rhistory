names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
# unconditional
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim1
times <- do.call("rbind", list(tim1, tim3, tim4, tim5))
times
do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
require(ggplot2)
times <- do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
require(ggplot2)
times <- do.call("rbind", list(base = tim1, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
rm(list = )
rm(list = ls())
library(lubridate)
library(data.table)
library(plyr)
library(dplyr)
set.seed(1237)
trial <- 10000
names <- sample(read.table("http://deron.meranda.us/data/census-derived-all-first.txt")[,1], trial, replace = T)
states <- c("NSW", "VIC", "QLD", "SA", "WA", "ACT", "NT")
territory <- sample(states, trial, replace = T)
start <- ymd(20140101) + days(sample(1:365, trial, replace = T))
inter <- start + months(sample(1:24, trial, replace = T))
end <- inter + months(sample(1:24, trial, replace = T))
preDf <- data.frame(name = names, territory = territory, start = start, end = end)
# create id
uqeName <- data.frame(name = unique(preDf$name), id = 1:length(unique(preDf$name)))
preDf <- merge(preDf, uqeName, by="name", all.x = TRUE)
preDf$id <- as.factor(preDf$id)
### add unconditional and conditional mean period
## base
# unconditional
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
## plyr
# unconditional
postDf <- plyr::mutate(preDf, period = as.double(end - start))
# conditonal
postDf <- ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start)))
## dplyr
# unconditional
postDf <- preDf %>% mutate(period = as.double(end - start))
# conditional
postDf <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
## data.table
# unconditional
preDt <- as.data.table(preDf)
setkey(preDt, id)
postDt <- preDt[, list(name = name, territory = territory,
start = start, end = end, id = id,
period = as.double(end - start))]
# conditional
postDt <- preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id]
## dplyr + data.table
# unconditional
postDt <- preDt %>% mutate(period = as.double(end - start))
# conditional
postDt <- preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id)
head(postDt)
## speed
tim1 <- system.time({
postDf <- transform(preDf, period = as.double(end - start))
agg <- aggregate(postDf[,5:6], by = list(postDf$id), FUN = function(x) if(is.factor(x)) x else mean(x))[, -2]
names(agg) <- c("id", "period")
postDf <- merge(postDf, agg, by = "id", all.x = T)
})
tim2 <- system.time(ddply(preDf, .(id), mutate, mean_period = mean(as.double(end - start))))
tim3 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
tim4 <- system.time(preDt[,
list(name = name, territory = territory,
start = start, end = end, id = id,
mean_period = mean(as.double(end - start))),
by = id])
tim5 <- system.time(preDf %>% group_by(id) %>% mutate(mean_period = mean(as.double(end - start))) %>% arrange(id))
require(ggplot2)
times <- do.call("rbind", list(base = tim1, plyr = tim2, dplyr = tim3, data.table = tim4, both = tim5))
times <- cbind(times, data.frame(package = c("base", "plyr", "dplyr", "data.table", "dplyr+data.table")))
ggplot(times, aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
require(ggplot2)
ggplot(times[, -2], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
dev.off()
require(ggplot2)
ggplot(times[, -2], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times[,2]
times[,-2]
times
times[-2,]
require(ggplot2)
ggplot(times[-2, ], aes(x = package, y = elapsed, fill = package)) +
geom_bar(stat = "identity") + ggtitle("Elapsed time of each package")
times
times[, c(1:3,6)]
f <- function(x){
tryCatch(
expr = {
x <- 1 + x
return(x)
}, error = function(cond){
message("error")
})
}
x <- f(1)
x
x <- f("a")
x
f <- function(x){
tryCatch(
expr = {
x <- 1 + x
return(x)
}, error = function(cond){
message("error")
return(x)
})
}
x <- f(1)
x
x <- f("a")
x
env.profile()
f <- function(x){
tryCatch(
expr = {
x <- 1 + x
return(x)
}, error = function(cond){
stop("error")
})
}
x <- f(1)
x
x <- f("a")
x
f <- function(x){
tryCatch(
expr = {
x <- 1 + x
return(x)
}, error = function(cond){
message("error")
parent.env(x)
})
}
x <- f(1)
x
x <- f("a")
x
rm(list = ls())
f <- function(x){
tryCatch(
expr = {
x <- 1 + x
return(x)
}, error = function(cond){
message("error")
parent.env(x)
})
}
x <- f(1)
x
x <- f("a")
x
set.seed(1237)
matrix(rnorm(500 * 20, 0, 4), nrow = 500)
set.seed(1237)
head(matrix(rnorm(500 * 20, 0, 4), nrow = 500))
set.seed(1237)
head(matrix(rnorm(500 * 20, 0, 4), nrow = 500)), 2)
?head
matrix(rnorm(500 * 20, 0, 4), nrow = 500))
set.seed(1237)
head(matrix(rnorm(500 * 20, 0, 4), nrow = 500), 2)
install.packages("fitdistrplus")
library(fitdistrplus)
require(MASS)
set.seed(1)
testData <- rnorm(1000)
distlist <- c("norm","unif","exp")
z <- fitdist(testData,"gamma",start=list(rate=0.1),fix.arg=list(shape=4))
?fitdist
fitdist(testData,"gamma", method = "mle")
?dgamma
fitdist(testData,"gamma", method = "mle", start = list(shape = 1))
fitdist(testData,"gamma", method = "mle", start = list(shape = 2))
fitdist(testData,"gamma")
fitdist(testData,"norm")
?optim
fitdist(testData, "gamma", method = "mme")
fitdist(testData, "gamma", method = "mme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "qme", method = "mme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, method = "qme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, method = "mqe", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, method = "mme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "gamma", method = "mme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "gamma", method = "qme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "gamma", method = "mqe", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "gamma", method = "mme", start = list(shape = 0.1, rate = 0.1))
fitdist(testData, "gamma", method = "mme")
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs<-1
dat<-as.data.frame(cbind(site,visit,ind,obs))
dat
site<-c(rep("X",8),rep("Y",8),rep("Z",8))
visit<-c(1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4)
ind<-c(rep(c("a","b"),12))
obs<-c(rep(1,6),NA,NA,rep(1,12),rep(NA,4))
dat2<-as.data.frame(cbind(site,visit,ind,obs))
dat2
dat
dat2
site <- c("X", "Y", "Z")
visit <- c(1, 2, 3, 4)
merge(site, visit, all = TRUE)
?grid.expand
?expand.grid
sites <- c("X", "Y", "Z")
users <- c("a", "c")
visits <- c(1, 2, 3, 4)
expand.grid(site, users, visits)
dat2
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs<-1
dat<-as.data.frame(cbind(site,visit,ind,obs))
dat
?merge
rm(list = ls())
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "c")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site, users, visits)
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "c")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site, users, visits)
rm(list = ls())
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "c")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site, user, visit)
rm(list = ls())
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "c")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site, ind, visit)
dat
grid
site <- c("X", "Y", "Z")
ind <- c("a", "c")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site = site, ind = ind, visit = visit)
grid
dat
merge(grid, dat, by = c("site", "ind", "visit"))
merge(grid, dat, by = c("site", "ind", "visit"), all = TRUE)
site<-c(rep("X",8),rep("Y",8),rep("Z",8))
visit<-c(1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4)
ind<-c(rep(c("a","b"),12))
obs<-c(rep(1,6),NA,NA,rep(1,12),rep(NA,4))
dat2<-as.data.frame(cbind(site,visit,ind,obs))
dat2
rm(list = ls())
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "b")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site = site, ind = ind, visit = visit)
merge(grid, dat, by = c("site", "ind", "visit"), all = TRUE)
site<-c(rep("X",8),rep("Y",8),rep("Z",8))
visit<-c(1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4)
ind<-c(rep(c("a","b"),12))
obs<-c(rep(1,6),NA,NA,rep(1,12),rep(NA,4))
dat2<-as.data.frame(cbind(site,visit,ind,obs))
daat2
dat2
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "b")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site = site, ind = ind, visit = visit)
merge(grid, dat, by = c("site", "ind", "visit"), all.x = TRUE)
merge(site, visit, all = TRUE)
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
site <- c("X", "Y", "Z")
ind <- c("a", "b")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site = site, ind = ind, visit = visit)
merge(grid, dat, by = c("site", "ind", "visit"), all.x = TRUE)
dat2
merge(grid, dat, by = c("site", "ind", "visit"), all.x = TRUE)
rm(list = ls())
# your data
site<-c(rep("X",6),rep("Y",8),rep("Z",4))
visit<-c(1,1,2,2,3,3,1,1,2,2,3,3,4,4,1,1,2,2)
ind<-c(rep(c("a","b"),9))
obs <- 1
dat<-as.data.frame(cbind(site,visit,ind,obs))
# expanded data
site <- c("X", "Y", "Z")
ind <- c("a", "b")
visit <- c(1, 2, 3, 4)
grid <- expand.grid(site = site, ind = ind, visit = visit)
# merge - left outer join that keeps all grid values
merge(grid, dat, by = c("site", "ind", "visit"), all.x = TRUE)
site<-c(rep("X",8),rep("Y",8),rep("Z",8))
visit<-c(1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4,1,1,2,2,3,3,4,4)
ind<-c(rep(c("a","b"),12))
obs<-c(rep(1,6),NA,NA,rep(1,12),rep(NA,4))
dat2<-as.data.frame(cbind(site,visit,ind,obs))
dat2
n <- rnorm(T, 0, 1)
c <- 2
phi <- 0.6
x_0 <- rnorm(1,c/(1-phi), 1/(1-phi**2))
v <- vector("numeric", 0)
v
n
n <- rnorm(T, 0, 1)
n
?rnorm
v[1] <- c + phi*x_0 + n[1]
?arima.sim
x_0
T
v
?lag
rnorm(1,c/(1-phi), 1/(1-phi**2))
t <- 10
n <- rnorm(t, 0, 1)
c <- 2
phi <- 6
x0 <- rnorm(1, c/(1-phi), 1/(1-phi**2))
v <- c(x0, rep(0, t))
rm(list = ls())
t <- 10
n <- rnorm(t, 0, 1)
c <- 2
phi <- 6
x0 <- rnorm(1, c/(1-phi), 1/(1-phi**2))
x0
rnorm(1,c/(1-phi), 1/(1-phi**2))
c/(1-phi)
1/(1-phi^2)
rnorm(1, c/(1-phi), 1/(1-phi**2))
rnorm(1, c/(1-phi), 1/(1-phi**2))
rnorm(1, c/(1-phi), 1/(1-phi**2))
rnorm(1, c/(1-phi), 1/(1-phi**2))
t <- 10
n <- rnorm(t, 0, 1)
c <- 2
phi <- 0.6
x0 <- rnorm(1, c/(1-phi), 1/(1-phi**2))
v <- c(x0, rep(0, t))
v
set.seed(1237)
t <- 10
n <- rnorm(t, 0, 1)
c <- 2
phi <- 0.6
x0 <- rnorm(1, c/(1-phi), 1/(1-phi**2))
v <- c(x0, rep(0, t))
for(i in 2:length(v)) {
v[i] <- c + phi * v[i-1] + n[i]
}
v
x0
set.seed(1237)
t <- 10
n <- rnorm(t, 0, 1)
c <- 2
phi <- 0.6
x0 <- rnorm(1, c/(1-phi), 1/(1-phi**2))
v <- c(x0, rep(0, t))
for(i in 2:length(v)) {
v[i] <- c + phi * v[i-1] + n[i-1]
}
v
?rcauchy
install.packages("mclust")
library(mclust)
?cluster.stats
?Mclust
?table
?prop.table
sample(5, size = 10, replace = TRUE))
letters[sample(4, 10, replace = TRUE)]
set.seed(1237)
val1 <- sample(5, size = 10, replace = TRUE)
val2 <- letters[sample(4, 10, replace = TRUE)]
sample(5, 10, replace = T)
table(val1, val2)
set.seed(1237)
val1 <- sample(5, size = 10, replace = TRUE)
val2 <- letters[sample(4, 10, replace = TRUE)]
tbl <- table(val1, val2)
prop.table(tbl, 1)
prop.table(tbl, margin = 1)
rm(list = ls())
source("src/knitSrc.R")
knitPost("2015-05-04-R-Tip-a-Day-5-Function-Composition")
knitPost("2015-05-09-R-Tip-a-Day-5-Function-Composition")
<<<<<<< HEAD
library(caret)
library(doParallel)
?trainControl
?knn
?KNN
?knn3
?knn
??knn3
??knn
source("src/knitSrc.R")
knitPost("2015-05-30-Setup-Random-Seed-on-Caret-Package")
knitPost("2015-05-30-Setup-Random-Seeds-on-Caret-Package")
=======
source("src/knitSrc.R")
knitPost("2015-05-16-R-Tip-a-Day-6-Reading-Unstructured-File")
>>>>>>> 4529cf8f3df072e22fb2217ccee1e256d3ee0420
getwd()
source("src/knitSrc.R")
knitPost("2015-08-08-Some-Thoughts-on-Python-for-R-Users")
Sys.Date()
knitPost("2015-08-08-Some-Thoughts-on-Python-for-R-Users")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
knitPost("2015-08-08-Some-Thoughts-on-Python")
