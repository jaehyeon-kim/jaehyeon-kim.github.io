<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Plumber on Jaehyeon Kim</title><link>https://jaehyeon.me/tags/plumber/</link><description>Recent content in Plumber on Jaehyeon Kim</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2023-2024 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Sun, 19 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon.me/tags/plumber/index.xml" rel="self" type="application/rss+xml"/><item><title>API Development with R Part II</title><link>https://jaehyeon.me/blog/2017-11-19-api-development-with-r-2/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2017-11-19-api-development-with-r-2/</guid><description><![CDATA[<p>In <a href="/blog/2017-11-18-api-development-with-r-1">Part I</a>, it is discussed how to serve an R function with <em>plumber</em>, <em>Rserve</em> and <em>rApache</em>. In this post, the APIs are deployed in a Docker container and, after showing example requests, their performance is compared. The <a href="https://hub.docker.com/r/rocker/r-ver/" target="_blank" rel="noopener noreferrer">rocker/r-ver:3.4<i class="fas fa-external-link-square-alt ms-1"></i></a> is used as the base image and each of the APIs is added to it. For simplicity, the APIs are served by <a href="http://supervisord.org/" target="_blank" rel="noopener noreferrer">Supervisor<i class="fas fa-external-link-square-alt ms-1"></i></a>. For performance testing, <a href="https://locust.io/" target="_blank" rel="noopener noreferrer">Locust<i class="fas fa-external-link-square-alt ms-1"></i></a> is used. The source of this post can be found in this <a href="https://github.com/jaehyeon-kim/r-api-demo" target="_blank" rel="noopener noreferrer"><strong>GitHub repository</strong><i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>]]></description><enclosure url="https://jaehyeon.me/blog/2017-11-19-api-development-with-r-2/featured.png" length="367256" type="image/png"/></item><item><title>API Development with R Part I</title><link>https://jaehyeon.me/blog/2017-11-18-api-development-with-r-1/</link><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2017-11-18-api-development-with-r-1/</guid><description><![CDATA[<p>API is an effective way of distributing analysis outputs to external clients. When it comes to API development with R, however, there are not many choices. Probably development would be made with <a href="https://github.com/trestletech/plumber" target="_blank" rel="noopener noreferrer">plumber<i class="fas fa-external-link-square-alt ms-1"></i></a>, <a href="https://www.rforge.net/Rserve/" target="_blank" rel="noopener noreferrer">Rserve<i class="fas fa-external-link-square-alt ms-1"></i></a>, <a href="http://rapache.net/" target="_blank" rel="noopener noreferrer">rApache<i class="fas fa-external-link-square-alt ms-1"></i></a> or <a href="https://www.opencpu.org/" target="_blank" rel="noopener noreferrer">OpenCPU<i class="fas fa-external-link-square-alt ms-1"></i></a> if a client or bridge layer to R is not considered.</p>]]></description><enclosure url="https://jaehyeon.me/blog/2017-11-18-api-development-with-r-1/featured.png" length="367256" type="image/png"/></item></channel></rss>