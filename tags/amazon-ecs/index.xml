<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Amazon ECS on Jaehyeon's Personal Site</title><link>https://jaehyeon-kim.github.io/tags/amazon-ecs/</link><description>Recent content in Amazon ECS on Jaehyeon's Personal Site</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2023-2023 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Sun, 03 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon-kim.github.io/tags/amazon-ecs/index.xml" rel="self" type="application/rss+xml"/><item><title>Use External Schema Registry with MSK Connect – Part 2 MSK Deployment</title><link>https://jaehyeon-kim.github.io/blog/2022-04-03-schema-registry-part2/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://jaehyeon-kim.github.io/blog/2022-04-03-schema-registry-part2/</guid><description>This article is originally posted in the Tech Insights of Cevo Australia - Link.
In the previous post, we discussed a Change Data Capture (CDC) solution with a schema registry. A local development environment is set up using Docker Compose. The Debezium and Confluent S3 connectors are deployed with the Confluent Avro converter and the Apicurio registry is used as the schema registry service. A quick example is shown to illustrate how schema evolution can be managed by the schema registry.</description><enclosure url="https://jaehyeon-kim.github.io/blog/2022-04-03-schema-registry-part2/featured.png" length="59689" type="image/png"/></item></channel></rss>