<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>OpenLineage on Jaehyeon Kim</title><link>https://jaehyeon.me/tags/openlineage/</link><description>Recent content in OpenLineage on Jaehyeon Kim</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2023-2025 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Mon, 14 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon.me/tags/openlineage/index.xml" rel="self" type="application/rss+xml"/><item><title>Self-service Data Platform via a Multi-tenant SQL Gateway</title><link>https://jaehyeon.me/blog/2025-07-17-self-service-data-platform-via-sql-gateway/</link><pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2025-07-17-self-service-data-platform-via-sql-gateway/</guid><description><![CDATA[<p>In the modern data stack, providing direct access to powerful engines like Apache Spark and Flink is a double-edged sword. While it empowers users, it often leads to chaos: resource contention from &ldquo;noisy neighbors,&rdquo; inconsistent security enforcement, and operational fragility. The core problem is the lack of a control plane between the users and the raw compute power.</p>
<p>The solution is a gateway-centric architecture. This design is built around a single, powerful concept, as defined by the Apache Kyuubi project:</p>]]></description><enclosure url="https://jaehyeon.me/blog/2025-07-17-self-service-data-platform-via-sql-gateway/featured.png" length="55011" type="image/png"/></item></channel></rss>