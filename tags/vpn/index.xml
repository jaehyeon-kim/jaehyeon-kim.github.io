<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>VPN on Jaehyeon Kim</title><link>https://jaehyeon.me/tags/vpn/</link><description>Recent content in VPN on Jaehyeon Kim</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2023-2024 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Sun, 06 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon.me/tags/vpn/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplify Your Development on AWS with Terraform</title><link>https://jaehyeon.me/blog/2022-02-06-dev-infra-terraform/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2022-02-06-dev-infra-terraform/</guid><description><![CDATA[<p>When I wrote my data lake demo series (<a href="/blog/2021-12-05-datalake-demo-part1">part 1</a>, <a href="/blog/2021-12-12-datalake-demo-part2">part 2</a> and <a href="/blog/2021-12-19-datalake-demo-part3">part 3</a>) recently, I used an Aurora PostgreSQL, MSK and EMR cluster. All of them were deployed to private subnets and dedicated infrastructure was created using CloudFormation. Using the infrastructure as code (IaC) tool helped a lot, but it resulted in creating 7 CloudFormation stacks, which was a bit harder to manage in the end. Then I looked into how to simplify building infrastructure and managing resources on AWS and decided to use Terraform instead. I find it has useful constructs (e.g. <a href="https://blog.knoldus.com/meta-arguments-in-terraform/" target="_blank" rel="noopener noreferrer">meta-arguments<i class="fas fa-external-link-square-alt ms-1"></i></a>) to make it simpler to create and manage resources. It also has a wide range of useful <a href="https://registry.terraform.io/namespaces/terraform-aws-modules" target="_blank" rel="noopener noreferrer">modules<i class="fas fa-external-link-square-alt ms-1"></i></a> that facilitate development significantly. In this post, we’ll build an infrastructure for development on AWS with Terraform. A VPN server will also be included in order to improve developer experience by accessing resources in private subnets from developer machines.</p>]]></description><enclosure url="https://jaehyeon.me/blog/2022-02-06-dev-infra-terraform/featured.png" length="46253" type="image/png"/></item></channel></rss>