<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Amazon SQS on Jaehyeon Kim</title><link>https://jaehyeon.me/tags/amazon-sqs/</link><description>Recent content in Amazon SQS on Jaehyeon Kim</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2023-2024 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Wed, 13 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon.me/tags/amazon-sqs/index.xml" rel="self" type="application/rss+xml"/><item><title>Yet another serverless solution for invoking AWS Lambda at a sub-minute frequency</title><link>https://jaehyeon.me/blog/2021-10-13-lambda-schedule/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2021-10-13-lambda-schedule/</guid><description><![CDATA[<p><a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-run-lambda-schedule.html" target="_blank" rel="noopener noreferrer">Triggering a Lambda function by an EventBridge Events rule<i class="fas fa-external-link-square-alt ms-1"></i></a> can be used as a _serverless _replacement of <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noopener noreferrer">cron job<i class="fas fa-external-link-square-alt ms-1"></i></a>. The highest frequency of it is one invocation per minute so that it cannot be used directly if you need to schedule a Lambda function more frequently. For example, it may be refreshing an application with real time metrics from an Amazon Connect instance where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-reports.html" target="_blank" rel="noopener noreferrer">some metrics are updated every 15 seconds<i class="fas fa-external-link-square-alt ms-1"></i></a>. There is a <a href="https://aws.amazon.com/blogs/architecture/a-serverless-solution-for-invoking-aws-lambda-at-a-sub-minute-frequency/" target="_blank" rel="noopener noreferrer">post in the AWS Architecture Blog<i class="fas fa-external-link-square-alt ms-1"></i></a>, and it suggests using <a href="https://aws.amazon.com/step-functions/" target="_blank" rel="noopener noreferrer">AWS Step Functions<i class="fas fa-external-link-square-alt ms-1"></i></a>. Or a usual recommendation is using <a href="https://stackoverflow.com/questions/35878619/scheduled-aws-lambda-task-at-less-than-1-minute-frequency" target="_blank" rel="noopener noreferrer">Amazon EC2<i class="fas fa-external-link-square-alt ms-1"></i></a>. Albeit being <em>serverless</em>, the former gets a bit complicated especially in order to <a href="https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-continue-new.html" target="_blank" rel="noopener noreferrer">handle the hard quota of 25,000 entries in the execution history<i class="fas fa-external-link-square-alt ms-1"></i></a>. And the latter is not an option if you look for a <em>serverless</em> solution. In this post, I’ll demonstrate another <em>serverless</em> solution of scheduling a Lambda function at a sub-minute frequency using <a href="https://aws.amazon.com/sqs/" target="_blank" rel="noopener noreferrer">Amazon SQS<i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>]]></description><enclosure url="https://jaehyeon.me/blog/2021-10-13-lambda-schedule/featured.png" length="46921" type="image/png"/></item></channel></rss>