<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Parallel Processing on Single Machine on Jaehyeon Kim</title><link>https://jaehyeon.me/series/parallel-processing-on-single-machine/</link><description>Recent content in Parallel Processing on Single Machine on Jaehyeon Kim</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2023-2024 Jaehyeon Kim. All Rights Reserved.</copyright><lastBuildDate>Thu, 19 Mar 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://jaehyeon.me/series/parallel-processing-on-single-machine/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel Processing on Single Machine - Part III</title><link>https://jaehyeon.me/blog/2015-03-19-parallel-processing-on-single-machine-3/</link><pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2015-03-19-parallel-processing-on-single-machine-3/</guid><description><![CDATA[<p>In the <a href="/blog/2015-03-17-parallel-processing-on-single-machine-2">previous posts</a>, two groups of ways to implement parallel processing on a single machine are introduced. The first group is provided by the <strong>snow</strong> or <strong>parallel</strong> package and the functions are an extension of <code>lapply()</code> (<a href="/blog/2015-03-14-parallel-processing-on-single-machine-1">LINK</a>). The second group is based on an extension of the <em>for</em> construct (<em>foreach</em>, <em>%dopar%</em> and <em>%:%</em>). The <em>foreach</em> construct is provided by the <em>foreach</em> package while clusters are made and registered by the <strong>parallel</strong> and <strong>doParallel</strong> packages respectively (<a href="/blog/2015-03-17-parallel-processing-on-single-machine-2">LINK</a>). To conclude this series, three practical examples are discussed for comparison in this article.</p>]]></description></item><item><title>Parallel Processing on Single Machine - Part II</title><link>https://jaehyeon.me/blog/2015-03-17-parallel-processing-on-single-machine-2/</link><pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2015-03-17-parallel-processing-on-single-machine-2/</guid><description><![CDATA[<p>In the <a href="/blog/2015-03-14-parallel-processing-on-single-machine-1">previous article</a>, parallel processing on a single machine using the <strong>snow</strong> and <strong>parallel</strong> packages are introduced. The four functions are an extension of <code>lapply()</code> with an additional argument that specifies a cluster object. In spite of their effectiveness and ease of use, there may be cases where creating a function that can be sent into clusters is not easy or looping may be more natural. In this article, another way of implementing parallel processing on a single machine is introduced using the <strong>foreach</strong> and <strong>doParallel</strong> packages where clusters are created by the <strong>parallel</strong> package. Finally the <strong>iterators</strong> package is briefly covered as it can facilitate writing a loop. The examples here are largely based on the individual packages&rsquo; vignettes and further details can be found there.</p>]]></description></item><item><title>Parallel Processing on Single Machine - Part I</title><link>https://jaehyeon.me/blog/2015-03-14-parallel-processing-on-single-machine-1/</link><pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate><guid>https://jaehyeon.me/blog/2015-03-14-parallel-processing-on-single-machine-1/</guid><description><![CDATA[<p>Lack of multi-threading and memory limitation are two outstanding weaknesses of base R. In fact, however, if the size of data is not so large that it can be read in RAM, the former would be relatively easily handled by parallel processing, provided that multiple processors are equipped. This article introduces to a way of implementing parallel processing on a single machine using the <strong>snow</strong> and <strong>parallel</strong> packages - the examples are largely based on <a href="http://shop.oreilly.com/product/0636920021421.do" target="_blank" rel="noopener noreferrer">McCallum and Weston (2012)<i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>]]></description></item></channel></rss>